Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COLON
    COMMA
    DOT
    MODULO
    NOT
    OR
    POR
    SEMICOLON

Grammar

Rule 0     S' -> program
Rule 1     program -> INIT commands END
Rule 2     commands -> command
Rule 3     commands -> command commands
Rule 4     command -> assignment
Rule 5     command -> conditional
Rule 6     command -> loop
Rule 7     command -> input
Rule 8     command -> output
Rule 9     command -> block
Rule 10    assignment -> ID ASSIGN expression
Rule 11    assignment -> ID ASSIGN STRING
Rule 12    expression -> term
Rule 13    expression -> term PLUS expression
Rule 14    expression -> term MINUS expression
Rule 15    expression -> LT ID GT
Rule 16    term -> factor
Rule 17    term -> factor TIMES term
Rule 18    term -> factor DIVIDE term
Rule 19    factor -> NUMBER
Rule 20    factor -> REAL
Rule 21    factor -> ID
Rule 22    factor -> LPAREN expression RPAREN
Rule 23    conditional -> PIF LPAREN condition RPAREN block optional_else
Rule 24    conditional -> PIF LPAREN condition RPAREN block
Rule 25    optional_else -> PAF block
Rule 26    optional_else -> empty
Rule 27    condition -> expression relational_op expression
Rule 28    relational_op -> EQUAL
Rule 29    relational_op -> GE
Rule 30    relational_op -> LE
Rule 31    relational_op -> GT
Rule 32    relational_op -> LT
Rule 33    relational_op -> NE
Rule 34    loop -> PHILE LPAREN condition RPAREN block
Rule 35    increment -> ID PLUSPLUS
Rule 36    increment -> ID MINUSMINUS
Rule 37    block -> LBRACE commands RBRACE
Rule 38    block -> LBRACE commands PEND
Rule 39    block -> PEGIN commands RBRACE
Rule 40    block -> PEGIN commands PEND
Rule 41    input -> PIN ID
Rule 42    output -> POUT expression
Rule 43    output -> POUT STRING
Rule 44    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 10 11
COLON                : 
COMMA                : 
DIVIDE               : 18
DOT                  : 
END                  : 1
EQUAL                : 28
GE                   : 29
GT                   : 15 31
ID                   : 10 11 15 21 35 36 41
INIT                 : 1
LBRACE               : 37 38
LE                   : 30
LPAREN               : 22 23 24 34
LT                   : 15 32
MINUS                : 14
MINUSMINUS           : 36
MODULO               : 
NE                   : 33
NOT                  : 
NUMBER               : 19
OR                   : 
PAF                  : 25
PEGIN                : 39 40
PEND                 : 38 40
PHILE                : 34
PIF                  : 23 24
PIN                  : 41
PLUS                 : 13
PLUSPLUS             : 35
POR                  : 
POUT                 : 42 43
RBRACE               : 37 39
REAL                 : 20
RPAREN               : 22 23 24 34
SEMICOLON            : 
STRING               : 11 43
TIMES                : 17
error                : 

Nonterminals, with rules where they appear

assignment           : 4
block                : 9 23 24 25 34
command              : 2 3
commands             : 1 3 37 38 39 40
condition            : 23 24 34
conditional          : 5
empty                : 26
expression           : 10 13 14 22 27 27 42
factor               : 16 17 18
increment            : 
input                : 7
loop                 : 6
optional_else        : 23
output               : 8
program              : 0
relational_op        : 27
term                 : 12 13 14 17 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INIT commands END

    INIT            shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INIT . commands END
    (2) commands -> . command
    (3) commands -> . command commands
    (4) command -> . assignment
    (5) command -> . conditional
    (6) command -> . loop
    (7) command -> . input
    (8) command -> . output
    (9) command -> . block
    (10) assignment -> . ID ASSIGN expression
    (11) assignment -> . ID ASSIGN STRING
    (23) conditional -> . PIF LPAREN condition RPAREN block optional_else
    (24) conditional -> . PIF LPAREN condition RPAREN block
    (34) loop -> . PHILE LPAREN condition RPAREN block
    (41) input -> . PIN ID
    (42) output -> . POUT expression
    (43) output -> . POUT STRING
    (37) block -> . LBRACE commands RBRACE
    (38) block -> . LBRACE commands PEND
    (39) block -> . PEGIN commands RBRACE
    (40) block -> . PEGIN commands PEND

    ID              shift and go to state 11
    PIF             shift and go to state 12
    PHILE           shift and go to state 13
    PIN             shift and go to state 14
    POUT            shift and go to state 15
    LBRACE          shift and go to state 16
    PEGIN           shift and go to state 17

    commands                       shift and go to state 3
    command                        shift and go to state 4
    assignment                     shift and go to state 5
    conditional                    shift and go to state 6
    loop                           shift and go to state 7
    input                          shift and go to state 8
    output                         shift and go to state 9
    block                          shift and go to state 10

state 3

    (1) program -> INIT commands . END

    END             shift and go to state 18


state 4

    (2) commands -> command .
    (3) commands -> command . commands
    (2) commands -> . command
    (3) commands -> . command commands
    (4) command -> . assignment
    (5) command -> . conditional
    (6) command -> . loop
    (7) command -> . input
    (8) command -> . output
    (9) command -> . block
    (10) assignment -> . ID ASSIGN expression
    (11) assignment -> . ID ASSIGN STRING
    (23) conditional -> . PIF LPAREN condition RPAREN block optional_else
    (24) conditional -> . PIF LPAREN condition RPAREN block
    (34) loop -> . PHILE LPAREN condition RPAREN block
    (41) input -> . PIN ID
    (42) output -> . POUT expression
    (43) output -> . POUT STRING
    (37) block -> . LBRACE commands RBRACE
    (38) block -> . LBRACE commands PEND
    (39) block -> . PEGIN commands RBRACE
    (40) block -> . PEGIN commands PEND

    END             reduce using rule 2 (commands -> command .)
    RBRACE          reduce using rule 2 (commands -> command .)
    PEND            reduce using rule 2 (commands -> command .)
    ID              shift and go to state 11
    PIF             shift and go to state 12
    PHILE           shift and go to state 13
    PIN             shift and go to state 14
    POUT            shift and go to state 15
    LBRACE          shift and go to state 16
    PEGIN           shift and go to state 17

    command                        shift and go to state 4
    commands                       shift and go to state 19
    assignment                     shift and go to state 5
    conditional                    shift and go to state 6
    loop                           shift and go to state 7
    input                          shift and go to state 8
    output                         shift and go to state 9
    block                          shift and go to state 10

state 5

    (4) command -> assignment .

    ID              reduce using rule 4 (command -> assignment .)
    PIF             reduce using rule 4 (command -> assignment .)
    PHILE           reduce using rule 4 (command -> assignment .)
    PIN             reduce using rule 4 (command -> assignment .)
    POUT            reduce using rule 4 (command -> assignment .)
    LBRACE          reduce using rule 4 (command -> assignment .)
    PEGIN           reduce using rule 4 (command -> assignment .)
    END             reduce using rule 4 (command -> assignment .)
    RBRACE          reduce using rule 4 (command -> assignment .)
    PEND            reduce using rule 4 (command -> assignment .)


state 6

    (5) command -> conditional .

    ID              reduce using rule 5 (command -> conditional .)
    PIF             reduce using rule 5 (command -> conditional .)
    PHILE           reduce using rule 5 (command -> conditional .)
    PIN             reduce using rule 5 (command -> conditional .)
    POUT            reduce using rule 5 (command -> conditional .)
    LBRACE          reduce using rule 5 (command -> conditional .)
    PEGIN           reduce using rule 5 (command -> conditional .)
    END             reduce using rule 5 (command -> conditional .)
    RBRACE          reduce using rule 5 (command -> conditional .)
    PEND            reduce using rule 5 (command -> conditional .)


state 7

    (6) command -> loop .

    ID              reduce using rule 6 (command -> loop .)
    PIF             reduce using rule 6 (command -> loop .)
    PHILE           reduce using rule 6 (command -> loop .)
    PIN             reduce using rule 6 (command -> loop .)
    POUT            reduce using rule 6 (command -> loop .)
    LBRACE          reduce using rule 6 (command -> loop .)
    PEGIN           reduce using rule 6 (command -> loop .)
    END             reduce using rule 6 (command -> loop .)
    RBRACE          reduce using rule 6 (command -> loop .)
    PEND            reduce using rule 6 (command -> loop .)


state 8

    (7) command -> input .

    ID              reduce using rule 7 (command -> input .)
    PIF             reduce using rule 7 (command -> input .)
    PHILE           reduce using rule 7 (command -> input .)
    PIN             reduce using rule 7 (command -> input .)
    POUT            reduce using rule 7 (command -> input .)
    LBRACE          reduce using rule 7 (command -> input .)
    PEGIN           reduce using rule 7 (command -> input .)
    END             reduce using rule 7 (command -> input .)
    RBRACE          reduce using rule 7 (command -> input .)
    PEND            reduce using rule 7 (command -> input .)


state 9

    (8) command -> output .

    ID              reduce using rule 8 (command -> output .)
    PIF             reduce using rule 8 (command -> output .)
    PHILE           reduce using rule 8 (command -> output .)
    PIN             reduce using rule 8 (command -> output .)
    POUT            reduce using rule 8 (command -> output .)
    LBRACE          reduce using rule 8 (command -> output .)
    PEGIN           reduce using rule 8 (command -> output .)
    END             reduce using rule 8 (command -> output .)
    RBRACE          reduce using rule 8 (command -> output .)
    PEND            reduce using rule 8 (command -> output .)


state 10

    (9) command -> block .

    ID              reduce using rule 9 (command -> block .)
    PIF             reduce using rule 9 (command -> block .)
    PHILE           reduce using rule 9 (command -> block .)
    PIN             reduce using rule 9 (command -> block .)
    POUT            reduce using rule 9 (command -> block .)
    LBRACE          reduce using rule 9 (command -> block .)
    PEGIN           reduce using rule 9 (command -> block .)
    END             reduce using rule 9 (command -> block .)
    RBRACE          reduce using rule 9 (command -> block .)
    PEND            reduce using rule 9 (command -> block .)


state 11

    (10) assignment -> ID . ASSIGN expression
    (11) assignment -> ID . ASSIGN STRING

    ASSIGN          shift and go to state 20


state 12

    (23) conditional -> PIF . LPAREN condition RPAREN block optional_else
    (24) conditional -> PIF . LPAREN condition RPAREN block

    LPAREN          shift and go to state 21


state 13

    (34) loop -> PHILE . LPAREN condition RPAREN block

    LPAREN          shift and go to state 22


state 14

    (41) input -> PIN . ID

    ID              shift and go to state 23


state 15

    (42) output -> POUT . expression
    (43) output -> POUT . STRING
    (12) expression -> . term
    (13) expression -> . term PLUS expression
    (14) expression -> . term MINUS expression
    (15) expression -> . LT ID GT
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 25
    LT              shift and go to state 27
    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    expression                     shift and go to state 24
    term                           shift and go to state 26
    factor                         shift and go to state 29

state 16

    (37) block -> LBRACE . commands RBRACE
    (38) block -> LBRACE . commands PEND
    (2) commands -> . command
    (3) commands -> . command commands
    (4) command -> . assignment
    (5) command -> . conditional
    (6) command -> . loop
    (7) command -> . input
    (8) command -> . output
    (9) command -> . block
    (10) assignment -> . ID ASSIGN expression
    (11) assignment -> . ID ASSIGN STRING
    (23) conditional -> . PIF LPAREN condition RPAREN block optional_else
    (24) conditional -> . PIF LPAREN condition RPAREN block
    (34) loop -> . PHILE LPAREN condition RPAREN block
    (41) input -> . PIN ID
    (42) output -> . POUT expression
    (43) output -> . POUT STRING
    (37) block -> . LBRACE commands RBRACE
    (38) block -> . LBRACE commands PEND
    (39) block -> . PEGIN commands RBRACE
    (40) block -> . PEGIN commands PEND

    ID              shift and go to state 11
    PIF             shift and go to state 12
    PHILE           shift and go to state 13
    PIN             shift and go to state 14
    POUT            shift and go to state 15
    LBRACE          shift and go to state 16
    PEGIN           shift and go to state 17

    commands                       shift and go to state 33
    command                        shift and go to state 4
    assignment                     shift and go to state 5
    conditional                    shift and go to state 6
    loop                           shift and go to state 7
    input                          shift and go to state 8
    output                         shift and go to state 9
    block                          shift and go to state 10

state 17

    (39) block -> PEGIN . commands RBRACE
    (40) block -> PEGIN . commands PEND
    (2) commands -> . command
    (3) commands -> . command commands
    (4) command -> . assignment
    (5) command -> . conditional
    (6) command -> . loop
    (7) command -> . input
    (8) command -> . output
    (9) command -> . block
    (10) assignment -> . ID ASSIGN expression
    (11) assignment -> . ID ASSIGN STRING
    (23) conditional -> . PIF LPAREN condition RPAREN block optional_else
    (24) conditional -> . PIF LPAREN condition RPAREN block
    (34) loop -> . PHILE LPAREN condition RPAREN block
    (41) input -> . PIN ID
    (42) output -> . POUT expression
    (43) output -> . POUT STRING
    (37) block -> . LBRACE commands RBRACE
    (38) block -> . LBRACE commands PEND
    (39) block -> . PEGIN commands RBRACE
    (40) block -> . PEGIN commands PEND

    ID              shift and go to state 11
    PIF             shift and go to state 12
    PHILE           shift and go to state 13
    PIN             shift and go to state 14
    POUT            shift and go to state 15
    LBRACE          shift and go to state 16
    PEGIN           shift and go to state 17

    commands                       shift and go to state 34
    command                        shift and go to state 4
    assignment                     shift and go to state 5
    conditional                    shift and go to state 6
    loop                           shift and go to state 7
    input                          shift and go to state 8
    output                         shift and go to state 9
    block                          shift and go to state 10

state 18

    (1) program -> INIT commands END .

    $end            reduce using rule 1 (program -> INIT commands END .)


state 19

    (3) commands -> command commands .

    END             reduce using rule 3 (commands -> command commands .)
    RBRACE          reduce using rule 3 (commands -> command commands .)
    PEND            reduce using rule 3 (commands -> command commands .)


state 20

    (10) assignment -> ID ASSIGN . expression
    (11) assignment -> ID ASSIGN . STRING
    (12) expression -> . term
    (13) expression -> . term PLUS expression
    (14) expression -> . term MINUS expression
    (15) expression -> . LT ID GT
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 36
    LT              shift and go to state 27
    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    expression                     shift and go to state 35
    term                           shift and go to state 26
    factor                         shift and go to state 29

state 21

    (23) conditional -> PIF LPAREN . condition RPAREN block optional_else
    (24) conditional -> PIF LPAREN . condition RPAREN block
    (27) condition -> . expression relational_op expression
    (12) expression -> . term
    (13) expression -> . term PLUS expression
    (14) expression -> . term MINUS expression
    (15) expression -> . LT ID GT
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    LT              shift and go to state 27
    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    condition                      shift and go to state 37
    expression                     shift and go to state 38
    term                           shift and go to state 26
    factor                         shift and go to state 29

state 22

    (34) loop -> PHILE LPAREN . condition RPAREN block
    (27) condition -> . expression relational_op expression
    (12) expression -> . term
    (13) expression -> . term PLUS expression
    (14) expression -> . term MINUS expression
    (15) expression -> . LT ID GT
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    LT              shift and go to state 27
    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    condition                      shift and go to state 39
    expression                     shift and go to state 38
    term                           shift and go to state 26
    factor                         shift and go to state 29

state 23

    (41) input -> PIN ID .

    ID              reduce using rule 41 (input -> PIN ID .)
    PIF             reduce using rule 41 (input -> PIN ID .)
    PHILE           reduce using rule 41 (input -> PIN ID .)
    PIN             reduce using rule 41 (input -> PIN ID .)
    POUT            reduce using rule 41 (input -> PIN ID .)
    LBRACE          reduce using rule 41 (input -> PIN ID .)
    PEGIN           reduce using rule 41 (input -> PIN ID .)
    END             reduce using rule 41 (input -> PIN ID .)
    RBRACE          reduce using rule 41 (input -> PIN ID .)
    PEND            reduce using rule 41 (input -> PIN ID .)


state 24

    (42) output -> POUT expression .

    ID              reduce using rule 42 (output -> POUT expression .)
    PIF             reduce using rule 42 (output -> POUT expression .)
    PHILE           reduce using rule 42 (output -> POUT expression .)
    PIN             reduce using rule 42 (output -> POUT expression .)
    POUT            reduce using rule 42 (output -> POUT expression .)
    LBRACE          reduce using rule 42 (output -> POUT expression .)
    PEGIN           reduce using rule 42 (output -> POUT expression .)
    END             reduce using rule 42 (output -> POUT expression .)
    RBRACE          reduce using rule 42 (output -> POUT expression .)
    PEND            reduce using rule 42 (output -> POUT expression .)


state 25

    (43) output -> POUT STRING .

    ID              reduce using rule 43 (output -> POUT STRING .)
    PIF             reduce using rule 43 (output -> POUT STRING .)
    PHILE           reduce using rule 43 (output -> POUT STRING .)
    PIN             reduce using rule 43 (output -> POUT STRING .)
    POUT            reduce using rule 43 (output -> POUT STRING .)
    LBRACE          reduce using rule 43 (output -> POUT STRING .)
    PEGIN           reduce using rule 43 (output -> POUT STRING .)
    END             reduce using rule 43 (output -> POUT STRING .)
    RBRACE          reduce using rule 43 (output -> POUT STRING .)
    PEND            reduce using rule 43 (output -> POUT STRING .)


state 26

    (12) expression -> term .
    (13) expression -> term . PLUS expression
    (14) expression -> term . MINUS expression

    ID              reduce using rule 12 (expression -> term .)
    PIF             reduce using rule 12 (expression -> term .)
    PHILE           reduce using rule 12 (expression -> term .)
    PIN             reduce using rule 12 (expression -> term .)
    POUT            reduce using rule 12 (expression -> term .)
    LBRACE          reduce using rule 12 (expression -> term .)
    PEGIN           reduce using rule 12 (expression -> term .)
    END             reduce using rule 12 (expression -> term .)
    RBRACE          reduce using rule 12 (expression -> term .)
    PEND            reduce using rule 12 (expression -> term .)
    EQUAL           reduce using rule 12 (expression -> term .)
    GE              reduce using rule 12 (expression -> term .)
    LE              reduce using rule 12 (expression -> term .)
    GT              reduce using rule 12 (expression -> term .)
    LT              reduce using rule 12 (expression -> term .)
    NE              reduce using rule 12 (expression -> term .)
    RPAREN          reduce using rule 12 (expression -> term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 27

    (15) expression -> LT . ID GT

    ID              shift and go to state 42


state 28

    (21) factor -> ID .

    TIMES           reduce using rule 21 (factor -> ID .)
    DIVIDE          reduce using rule 21 (factor -> ID .)
    PLUS            reduce using rule 21 (factor -> ID .)
    MINUS           reduce using rule 21 (factor -> ID .)
    ID              reduce using rule 21 (factor -> ID .)
    PIF             reduce using rule 21 (factor -> ID .)
    PHILE           reduce using rule 21 (factor -> ID .)
    PIN             reduce using rule 21 (factor -> ID .)
    POUT            reduce using rule 21 (factor -> ID .)
    LBRACE          reduce using rule 21 (factor -> ID .)
    PEGIN           reduce using rule 21 (factor -> ID .)
    END             reduce using rule 21 (factor -> ID .)
    RBRACE          reduce using rule 21 (factor -> ID .)
    PEND            reduce using rule 21 (factor -> ID .)
    EQUAL           reduce using rule 21 (factor -> ID .)
    GE              reduce using rule 21 (factor -> ID .)
    LE              reduce using rule 21 (factor -> ID .)
    GT              reduce using rule 21 (factor -> ID .)
    LT              reduce using rule 21 (factor -> ID .)
    NE              reduce using rule 21 (factor -> ID .)
    RPAREN          reduce using rule 21 (factor -> ID .)


state 29

    (16) term -> factor .
    (17) term -> factor . TIMES term
    (18) term -> factor . DIVIDE term

    PLUS            reduce using rule 16 (term -> factor .)
    MINUS           reduce using rule 16 (term -> factor .)
    ID              reduce using rule 16 (term -> factor .)
    PIF             reduce using rule 16 (term -> factor .)
    PHILE           reduce using rule 16 (term -> factor .)
    PIN             reduce using rule 16 (term -> factor .)
    POUT            reduce using rule 16 (term -> factor .)
    LBRACE          reduce using rule 16 (term -> factor .)
    PEGIN           reduce using rule 16 (term -> factor .)
    END             reduce using rule 16 (term -> factor .)
    RBRACE          reduce using rule 16 (term -> factor .)
    PEND            reduce using rule 16 (term -> factor .)
    EQUAL           reduce using rule 16 (term -> factor .)
    GE              reduce using rule 16 (term -> factor .)
    LE              reduce using rule 16 (term -> factor .)
    GT              reduce using rule 16 (term -> factor .)
    LT              reduce using rule 16 (term -> factor .)
    NE              reduce using rule 16 (term -> factor .)
    RPAREN          reduce using rule 16 (term -> factor .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 30

    (19) factor -> NUMBER .

    TIMES           reduce using rule 19 (factor -> NUMBER .)
    DIVIDE          reduce using rule 19 (factor -> NUMBER .)
    PLUS            reduce using rule 19 (factor -> NUMBER .)
    MINUS           reduce using rule 19 (factor -> NUMBER .)
    ID              reduce using rule 19 (factor -> NUMBER .)
    PIF             reduce using rule 19 (factor -> NUMBER .)
    PHILE           reduce using rule 19 (factor -> NUMBER .)
    PIN             reduce using rule 19 (factor -> NUMBER .)
    POUT            reduce using rule 19 (factor -> NUMBER .)
    LBRACE          reduce using rule 19 (factor -> NUMBER .)
    PEGIN           reduce using rule 19 (factor -> NUMBER .)
    END             reduce using rule 19 (factor -> NUMBER .)
    RBRACE          reduce using rule 19 (factor -> NUMBER .)
    PEND            reduce using rule 19 (factor -> NUMBER .)
    EQUAL           reduce using rule 19 (factor -> NUMBER .)
    GE              reduce using rule 19 (factor -> NUMBER .)
    LE              reduce using rule 19 (factor -> NUMBER .)
    GT              reduce using rule 19 (factor -> NUMBER .)
    LT              reduce using rule 19 (factor -> NUMBER .)
    NE              reduce using rule 19 (factor -> NUMBER .)
    RPAREN          reduce using rule 19 (factor -> NUMBER .)


state 31

    (20) factor -> REAL .

    TIMES           reduce using rule 20 (factor -> REAL .)
    DIVIDE          reduce using rule 20 (factor -> REAL .)
    PLUS            reduce using rule 20 (factor -> REAL .)
    MINUS           reduce using rule 20 (factor -> REAL .)
    ID              reduce using rule 20 (factor -> REAL .)
    PIF             reduce using rule 20 (factor -> REAL .)
    PHILE           reduce using rule 20 (factor -> REAL .)
    PIN             reduce using rule 20 (factor -> REAL .)
    POUT            reduce using rule 20 (factor -> REAL .)
    LBRACE          reduce using rule 20 (factor -> REAL .)
    PEGIN           reduce using rule 20 (factor -> REAL .)
    END             reduce using rule 20 (factor -> REAL .)
    RBRACE          reduce using rule 20 (factor -> REAL .)
    PEND            reduce using rule 20 (factor -> REAL .)
    EQUAL           reduce using rule 20 (factor -> REAL .)
    GE              reduce using rule 20 (factor -> REAL .)
    LE              reduce using rule 20 (factor -> REAL .)
    GT              reduce using rule 20 (factor -> REAL .)
    LT              reduce using rule 20 (factor -> REAL .)
    NE              reduce using rule 20 (factor -> REAL .)
    RPAREN          reduce using rule 20 (factor -> REAL .)


state 32

    (22) factor -> LPAREN . expression RPAREN
    (12) expression -> . term
    (13) expression -> . term PLUS expression
    (14) expression -> . term MINUS expression
    (15) expression -> . LT ID GT
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    LT              shift and go to state 27
    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    expression                     shift and go to state 45
    term                           shift and go to state 26
    factor                         shift and go to state 29

state 33

    (37) block -> LBRACE commands . RBRACE
    (38) block -> LBRACE commands . PEND

    RBRACE          shift and go to state 46
    PEND            shift and go to state 47


state 34

    (39) block -> PEGIN commands . RBRACE
    (40) block -> PEGIN commands . PEND

    RBRACE          shift and go to state 48
    PEND            shift and go to state 49


state 35

    (10) assignment -> ID ASSIGN expression .

    ID              reduce using rule 10 (assignment -> ID ASSIGN expression .)
    PIF             reduce using rule 10 (assignment -> ID ASSIGN expression .)
    PHILE           reduce using rule 10 (assignment -> ID ASSIGN expression .)
    PIN             reduce using rule 10 (assignment -> ID ASSIGN expression .)
    POUT            reduce using rule 10 (assignment -> ID ASSIGN expression .)
    LBRACE          reduce using rule 10 (assignment -> ID ASSIGN expression .)
    PEGIN           reduce using rule 10 (assignment -> ID ASSIGN expression .)
    END             reduce using rule 10 (assignment -> ID ASSIGN expression .)
    RBRACE          reduce using rule 10 (assignment -> ID ASSIGN expression .)
    PEND            reduce using rule 10 (assignment -> ID ASSIGN expression .)


state 36

    (11) assignment -> ID ASSIGN STRING .

    ID              reduce using rule 11 (assignment -> ID ASSIGN STRING .)
    PIF             reduce using rule 11 (assignment -> ID ASSIGN STRING .)
    PHILE           reduce using rule 11 (assignment -> ID ASSIGN STRING .)
    PIN             reduce using rule 11 (assignment -> ID ASSIGN STRING .)
    POUT            reduce using rule 11 (assignment -> ID ASSIGN STRING .)
    LBRACE          reduce using rule 11 (assignment -> ID ASSIGN STRING .)
    PEGIN           reduce using rule 11 (assignment -> ID ASSIGN STRING .)
    END             reduce using rule 11 (assignment -> ID ASSIGN STRING .)
    RBRACE          reduce using rule 11 (assignment -> ID ASSIGN STRING .)
    PEND            reduce using rule 11 (assignment -> ID ASSIGN STRING .)


state 37

    (23) conditional -> PIF LPAREN condition . RPAREN block optional_else
    (24) conditional -> PIF LPAREN condition . RPAREN block

    RPAREN          shift and go to state 50


state 38

    (27) condition -> expression . relational_op expression
    (28) relational_op -> . EQUAL
    (29) relational_op -> . GE
    (30) relational_op -> . LE
    (31) relational_op -> . GT
    (32) relational_op -> . LT
    (33) relational_op -> . NE

    EQUAL           shift and go to state 52
    GE              shift and go to state 53
    LE              shift and go to state 54
    GT              shift and go to state 55
    LT              shift and go to state 56
    NE              shift and go to state 57

    relational_op                  shift and go to state 51

state 39

    (34) loop -> PHILE LPAREN condition . RPAREN block

    RPAREN          shift and go to state 58


state 40

    (13) expression -> term PLUS . expression
    (12) expression -> . term
    (13) expression -> . term PLUS expression
    (14) expression -> . term MINUS expression
    (15) expression -> . LT ID GT
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    LT              shift and go to state 27
    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    term                           shift and go to state 26
    expression                     shift and go to state 59
    factor                         shift and go to state 29

state 41

    (14) expression -> term MINUS . expression
    (12) expression -> . term
    (13) expression -> . term PLUS expression
    (14) expression -> . term MINUS expression
    (15) expression -> . LT ID GT
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    LT              shift and go to state 27
    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    term                           shift and go to state 26
    expression                     shift and go to state 60
    factor                         shift and go to state 29

state 42

    (15) expression -> LT ID . GT

    GT              shift and go to state 61


state 43

    (17) term -> factor TIMES . term
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    factor                         shift and go to state 29
    term                           shift and go to state 62

state 44

    (18) term -> factor DIVIDE . term
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    factor                         shift and go to state 29
    term                           shift and go to state 63

state 45

    (22) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 64


state 46

    (37) block -> LBRACE commands RBRACE .

    ID              reduce using rule 37 (block -> LBRACE commands RBRACE .)
    PIF             reduce using rule 37 (block -> LBRACE commands RBRACE .)
    PHILE           reduce using rule 37 (block -> LBRACE commands RBRACE .)
    PIN             reduce using rule 37 (block -> LBRACE commands RBRACE .)
    POUT            reduce using rule 37 (block -> LBRACE commands RBRACE .)
    LBRACE          reduce using rule 37 (block -> LBRACE commands RBRACE .)
    PEGIN           reduce using rule 37 (block -> LBRACE commands RBRACE .)
    END             reduce using rule 37 (block -> LBRACE commands RBRACE .)
    RBRACE          reduce using rule 37 (block -> LBRACE commands RBRACE .)
    PEND            reduce using rule 37 (block -> LBRACE commands RBRACE .)
    PAF             reduce using rule 37 (block -> LBRACE commands RBRACE .)


state 47

    (38) block -> LBRACE commands PEND .

    ID              reduce using rule 38 (block -> LBRACE commands PEND .)
    PIF             reduce using rule 38 (block -> LBRACE commands PEND .)
    PHILE           reduce using rule 38 (block -> LBRACE commands PEND .)
    PIN             reduce using rule 38 (block -> LBRACE commands PEND .)
    POUT            reduce using rule 38 (block -> LBRACE commands PEND .)
    LBRACE          reduce using rule 38 (block -> LBRACE commands PEND .)
    PEGIN           reduce using rule 38 (block -> LBRACE commands PEND .)
    END             reduce using rule 38 (block -> LBRACE commands PEND .)
    RBRACE          reduce using rule 38 (block -> LBRACE commands PEND .)
    PEND            reduce using rule 38 (block -> LBRACE commands PEND .)
    PAF             reduce using rule 38 (block -> LBRACE commands PEND .)


state 48

    (39) block -> PEGIN commands RBRACE .

    ID              reduce using rule 39 (block -> PEGIN commands RBRACE .)
    PIF             reduce using rule 39 (block -> PEGIN commands RBRACE .)
    PHILE           reduce using rule 39 (block -> PEGIN commands RBRACE .)
    PIN             reduce using rule 39 (block -> PEGIN commands RBRACE .)
    POUT            reduce using rule 39 (block -> PEGIN commands RBRACE .)
    LBRACE          reduce using rule 39 (block -> PEGIN commands RBRACE .)
    PEGIN           reduce using rule 39 (block -> PEGIN commands RBRACE .)
    END             reduce using rule 39 (block -> PEGIN commands RBRACE .)
    RBRACE          reduce using rule 39 (block -> PEGIN commands RBRACE .)
    PEND            reduce using rule 39 (block -> PEGIN commands RBRACE .)
    PAF             reduce using rule 39 (block -> PEGIN commands RBRACE .)


state 49

    (40) block -> PEGIN commands PEND .

    ID              reduce using rule 40 (block -> PEGIN commands PEND .)
    PIF             reduce using rule 40 (block -> PEGIN commands PEND .)
    PHILE           reduce using rule 40 (block -> PEGIN commands PEND .)
    PIN             reduce using rule 40 (block -> PEGIN commands PEND .)
    POUT            reduce using rule 40 (block -> PEGIN commands PEND .)
    LBRACE          reduce using rule 40 (block -> PEGIN commands PEND .)
    PEGIN           reduce using rule 40 (block -> PEGIN commands PEND .)
    END             reduce using rule 40 (block -> PEGIN commands PEND .)
    RBRACE          reduce using rule 40 (block -> PEGIN commands PEND .)
    PEND            reduce using rule 40 (block -> PEGIN commands PEND .)
    PAF             reduce using rule 40 (block -> PEGIN commands PEND .)


state 50

    (23) conditional -> PIF LPAREN condition RPAREN . block optional_else
    (24) conditional -> PIF LPAREN condition RPAREN . block
    (37) block -> . LBRACE commands RBRACE
    (38) block -> . LBRACE commands PEND
    (39) block -> . PEGIN commands RBRACE
    (40) block -> . PEGIN commands PEND

    LBRACE          shift and go to state 16
    PEGIN           shift and go to state 17

    block                          shift and go to state 65

state 51

    (27) condition -> expression relational_op . expression
    (12) expression -> . term
    (13) expression -> . term PLUS expression
    (14) expression -> . term MINUS expression
    (15) expression -> . LT ID GT
    (16) term -> . factor
    (17) term -> . factor TIMES term
    (18) term -> . factor DIVIDE term
    (19) factor -> . NUMBER
    (20) factor -> . REAL
    (21) factor -> . ID
    (22) factor -> . LPAREN expression RPAREN

    LT              shift and go to state 27
    NUMBER          shift and go to state 30
    REAL            shift and go to state 31
    ID              shift and go to state 28
    LPAREN          shift and go to state 32

    expression                     shift and go to state 66
    term                           shift and go to state 26
    factor                         shift and go to state 29

state 52

    (28) relational_op -> EQUAL .

    LT              reduce using rule 28 (relational_op -> EQUAL .)
    NUMBER          reduce using rule 28 (relational_op -> EQUAL .)
    REAL            reduce using rule 28 (relational_op -> EQUAL .)
    ID              reduce using rule 28 (relational_op -> EQUAL .)
    LPAREN          reduce using rule 28 (relational_op -> EQUAL .)


state 53

    (29) relational_op -> GE .

    LT              reduce using rule 29 (relational_op -> GE .)
    NUMBER          reduce using rule 29 (relational_op -> GE .)
    REAL            reduce using rule 29 (relational_op -> GE .)
    ID              reduce using rule 29 (relational_op -> GE .)
    LPAREN          reduce using rule 29 (relational_op -> GE .)


state 54

    (30) relational_op -> LE .

    LT              reduce using rule 30 (relational_op -> LE .)
    NUMBER          reduce using rule 30 (relational_op -> LE .)
    REAL            reduce using rule 30 (relational_op -> LE .)
    ID              reduce using rule 30 (relational_op -> LE .)
    LPAREN          reduce using rule 30 (relational_op -> LE .)


state 55

    (31) relational_op -> GT .

    LT              reduce using rule 31 (relational_op -> GT .)
    NUMBER          reduce using rule 31 (relational_op -> GT .)
    REAL            reduce using rule 31 (relational_op -> GT .)
    ID              reduce using rule 31 (relational_op -> GT .)
    LPAREN          reduce using rule 31 (relational_op -> GT .)


state 56

    (32) relational_op -> LT .

    LT              reduce using rule 32 (relational_op -> LT .)
    NUMBER          reduce using rule 32 (relational_op -> LT .)
    REAL            reduce using rule 32 (relational_op -> LT .)
    ID              reduce using rule 32 (relational_op -> LT .)
    LPAREN          reduce using rule 32 (relational_op -> LT .)


state 57

    (33) relational_op -> NE .

    LT              reduce using rule 33 (relational_op -> NE .)
    NUMBER          reduce using rule 33 (relational_op -> NE .)
    REAL            reduce using rule 33 (relational_op -> NE .)
    ID              reduce using rule 33 (relational_op -> NE .)
    LPAREN          reduce using rule 33 (relational_op -> NE .)


state 58

    (34) loop -> PHILE LPAREN condition RPAREN . block
    (37) block -> . LBRACE commands RBRACE
    (38) block -> . LBRACE commands PEND
    (39) block -> . PEGIN commands RBRACE
    (40) block -> . PEGIN commands PEND

    LBRACE          shift and go to state 16
    PEGIN           shift and go to state 17

    block                          shift and go to state 67

state 59

    (13) expression -> term PLUS expression .

    ID              reduce using rule 13 (expression -> term PLUS expression .)
    PIF             reduce using rule 13 (expression -> term PLUS expression .)
    PHILE           reduce using rule 13 (expression -> term PLUS expression .)
    PIN             reduce using rule 13 (expression -> term PLUS expression .)
    POUT            reduce using rule 13 (expression -> term PLUS expression .)
    LBRACE          reduce using rule 13 (expression -> term PLUS expression .)
    PEGIN           reduce using rule 13 (expression -> term PLUS expression .)
    END             reduce using rule 13 (expression -> term PLUS expression .)
    RBRACE          reduce using rule 13 (expression -> term PLUS expression .)
    PEND            reduce using rule 13 (expression -> term PLUS expression .)
    EQUAL           reduce using rule 13 (expression -> term PLUS expression .)
    GE              reduce using rule 13 (expression -> term PLUS expression .)
    LE              reduce using rule 13 (expression -> term PLUS expression .)
    GT              reduce using rule 13 (expression -> term PLUS expression .)
    LT              reduce using rule 13 (expression -> term PLUS expression .)
    NE              reduce using rule 13 (expression -> term PLUS expression .)
    RPAREN          reduce using rule 13 (expression -> term PLUS expression .)


state 60

    (14) expression -> term MINUS expression .

    ID              reduce using rule 14 (expression -> term MINUS expression .)
    PIF             reduce using rule 14 (expression -> term MINUS expression .)
    PHILE           reduce using rule 14 (expression -> term MINUS expression .)
    PIN             reduce using rule 14 (expression -> term MINUS expression .)
    POUT            reduce using rule 14 (expression -> term MINUS expression .)
    LBRACE          reduce using rule 14 (expression -> term MINUS expression .)
    PEGIN           reduce using rule 14 (expression -> term MINUS expression .)
    END             reduce using rule 14 (expression -> term MINUS expression .)
    RBRACE          reduce using rule 14 (expression -> term MINUS expression .)
    PEND            reduce using rule 14 (expression -> term MINUS expression .)
    EQUAL           reduce using rule 14 (expression -> term MINUS expression .)
    GE              reduce using rule 14 (expression -> term MINUS expression .)
    LE              reduce using rule 14 (expression -> term MINUS expression .)
    GT              reduce using rule 14 (expression -> term MINUS expression .)
    LT              reduce using rule 14 (expression -> term MINUS expression .)
    NE              reduce using rule 14 (expression -> term MINUS expression .)
    RPAREN          reduce using rule 14 (expression -> term MINUS expression .)


state 61

    (15) expression -> LT ID GT .

    ID              reduce using rule 15 (expression -> LT ID GT .)
    PIF             reduce using rule 15 (expression -> LT ID GT .)
    PHILE           reduce using rule 15 (expression -> LT ID GT .)
    PIN             reduce using rule 15 (expression -> LT ID GT .)
    POUT            reduce using rule 15 (expression -> LT ID GT .)
    LBRACE          reduce using rule 15 (expression -> LT ID GT .)
    PEGIN           reduce using rule 15 (expression -> LT ID GT .)
    END             reduce using rule 15 (expression -> LT ID GT .)
    RBRACE          reduce using rule 15 (expression -> LT ID GT .)
    PEND            reduce using rule 15 (expression -> LT ID GT .)
    EQUAL           reduce using rule 15 (expression -> LT ID GT .)
    GE              reduce using rule 15 (expression -> LT ID GT .)
    LE              reduce using rule 15 (expression -> LT ID GT .)
    GT              reduce using rule 15 (expression -> LT ID GT .)
    LT              reduce using rule 15 (expression -> LT ID GT .)
    NE              reduce using rule 15 (expression -> LT ID GT .)
    RPAREN          reduce using rule 15 (expression -> LT ID GT .)


state 62

    (17) term -> factor TIMES term .

    PLUS            reduce using rule 17 (term -> factor TIMES term .)
    MINUS           reduce using rule 17 (term -> factor TIMES term .)
    ID              reduce using rule 17 (term -> factor TIMES term .)
    PIF             reduce using rule 17 (term -> factor TIMES term .)
    PHILE           reduce using rule 17 (term -> factor TIMES term .)
    PIN             reduce using rule 17 (term -> factor TIMES term .)
    POUT            reduce using rule 17 (term -> factor TIMES term .)
    LBRACE          reduce using rule 17 (term -> factor TIMES term .)
    PEGIN           reduce using rule 17 (term -> factor TIMES term .)
    END             reduce using rule 17 (term -> factor TIMES term .)
    RBRACE          reduce using rule 17 (term -> factor TIMES term .)
    PEND            reduce using rule 17 (term -> factor TIMES term .)
    EQUAL           reduce using rule 17 (term -> factor TIMES term .)
    GE              reduce using rule 17 (term -> factor TIMES term .)
    LE              reduce using rule 17 (term -> factor TIMES term .)
    GT              reduce using rule 17 (term -> factor TIMES term .)
    LT              reduce using rule 17 (term -> factor TIMES term .)
    NE              reduce using rule 17 (term -> factor TIMES term .)
    RPAREN          reduce using rule 17 (term -> factor TIMES term .)


state 63

    (18) term -> factor DIVIDE term .

    PLUS            reduce using rule 18 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 18 (term -> factor DIVIDE term .)
    ID              reduce using rule 18 (term -> factor DIVIDE term .)
    PIF             reduce using rule 18 (term -> factor DIVIDE term .)
    PHILE           reduce using rule 18 (term -> factor DIVIDE term .)
    PIN             reduce using rule 18 (term -> factor DIVIDE term .)
    POUT            reduce using rule 18 (term -> factor DIVIDE term .)
    LBRACE          reduce using rule 18 (term -> factor DIVIDE term .)
    PEGIN           reduce using rule 18 (term -> factor DIVIDE term .)
    END             reduce using rule 18 (term -> factor DIVIDE term .)
    RBRACE          reduce using rule 18 (term -> factor DIVIDE term .)
    PEND            reduce using rule 18 (term -> factor DIVIDE term .)
    EQUAL           reduce using rule 18 (term -> factor DIVIDE term .)
    GE              reduce using rule 18 (term -> factor DIVIDE term .)
    LE              reduce using rule 18 (term -> factor DIVIDE term .)
    GT              reduce using rule 18 (term -> factor DIVIDE term .)
    LT              reduce using rule 18 (term -> factor DIVIDE term .)
    NE              reduce using rule 18 (term -> factor DIVIDE term .)
    RPAREN          reduce using rule 18 (term -> factor DIVIDE term .)


state 64

    (22) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    PIF             reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    PHILE           reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    PIN             reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    POUT            reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    PEGIN           reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    PEND            reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 22 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (factor -> LPAREN expression RPAREN .)


state 65

    (23) conditional -> PIF LPAREN condition RPAREN block . optional_else
    (24) conditional -> PIF LPAREN condition RPAREN block .
    (25) optional_else -> . PAF block
    (26) optional_else -> . empty
    (44) empty -> .

  ! reduce/reduce conflict for ID resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
  ! reduce/reduce conflict for PIF resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
  ! reduce/reduce conflict for PHILE resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
  ! reduce/reduce conflict for PIN resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
  ! reduce/reduce conflict for POUT resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
  ! reduce/reduce conflict for LBRACE resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
  ! reduce/reduce conflict for PEGIN resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
  ! reduce/reduce conflict for END resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
  ! reduce/reduce conflict for RBRACE resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
  ! reduce/reduce conflict for PEND resolved using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    ID              reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    PIF             reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    PHILE           reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    PIN             reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    POUT            reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    LBRACE          reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    PEGIN           reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    END             reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    RBRACE          reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    PEND            reduce using rule 24 (conditional -> PIF LPAREN condition RPAREN block .)
    PAF             shift and go to state 69

  ! ID              [ reduce using rule 44 (empty -> .) ]
  ! PIF             [ reduce using rule 44 (empty -> .) ]
  ! PHILE           [ reduce using rule 44 (empty -> .) ]
  ! PIN             [ reduce using rule 44 (empty -> .) ]
  ! POUT            [ reduce using rule 44 (empty -> .) ]
  ! LBRACE          [ reduce using rule 44 (empty -> .) ]
  ! PEGIN           [ reduce using rule 44 (empty -> .) ]
  ! END             [ reduce using rule 44 (empty -> .) ]
  ! RBRACE          [ reduce using rule 44 (empty -> .) ]
  ! PEND            [ reduce using rule 44 (empty -> .) ]

    optional_else                  shift and go to state 68
    empty                          shift and go to state 70

state 66

    (27) condition -> expression relational_op expression .

    RPAREN          reduce using rule 27 (condition -> expression relational_op expression .)


state 67

    (34) loop -> PHILE LPAREN condition RPAREN block .

    ID              reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)
    PIF             reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)
    PHILE           reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)
    PIN             reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)
    POUT            reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)
    LBRACE          reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)
    PEGIN           reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)
    END             reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)
    RBRACE          reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)
    PEND            reduce using rule 34 (loop -> PHILE LPAREN condition RPAREN block .)


state 68

    (23) conditional -> PIF LPAREN condition RPAREN block optional_else .

    ID              reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)
    PIF             reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)
    PHILE           reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)
    PIN             reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)
    POUT            reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)
    LBRACE          reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)
    PEGIN           reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)
    END             reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)
    RBRACE          reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)
    PEND            reduce using rule 23 (conditional -> PIF LPAREN condition RPAREN block optional_else .)


state 69

    (25) optional_else -> PAF . block
    (37) block -> . LBRACE commands RBRACE
    (38) block -> . LBRACE commands PEND
    (39) block -> . PEGIN commands RBRACE
    (40) block -> . PEGIN commands PEND

    LBRACE          shift and go to state 16
    PEGIN           shift and go to state 17

    block                          shift and go to state 71

state 70

    (26) optional_else -> empty .

    ID              reduce using rule 26 (optional_else -> empty .)
    PIF             reduce using rule 26 (optional_else -> empty .)
    PHILE           reduce using rule 26 (optional_else -> empty .)
    PIN             reduce using rule 26 (optional_else -> empty .)
    POUT            reduce using rule 26 (optional_else -> empty .)
    LBRACE          reduce using rule 26 (optional_else -> empty .)
    PEGIN           reduce using rule 26 (optional_else -> empty .)
    END             reduce using rule 26 (optional_else -> empty .)
    RBRACE          reduce using rule 26 (optional_else -> empty .)
    PEND            reduce using rule 26 (optional_else -> empty .)


state 71

    (25) optional_else -> PAF block .

    ID              reduce using rule 25 (optional_else -> PAF block .)
    PIF             reduce using rule 25 (optional_else -> PAF block .)
    PHILE           reduce using rule 25 (optional_else -> PAF block .)
    PIN             reduce using rule 25 (optional_else -> PAF block .)
    POUT            reduce using rule 25 (optional_else -> PAF block .)
    LBRACE          reduce using rule 25 (optional_else -> PAF block .)
    PEGIN           reduce using rule 25 (optional_else -> PAF block .)
    END             reduce using rule 25 (optional_else -> PAF block .)
    RBRACE          reduce using rule 25 (optional_else -> PAF block .)
    PEND            reduce using rule 25 (optional_else -> PAF block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 65 resolved using rule (conditional -> PIF LPAREN condition RPAREN block)
WARNING: rejected rule (empty -> <empty>) in state 65
WARNING: Rule (empty -> <empty>) is never reduced
