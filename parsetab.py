
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN COLON COMMA DIVIDE DOT END EQUAL GE GT ID INIT LBRACE LE LPAREN LT MINUS MINUSMINUS MODULO NE NOT NUMBER OR PAF PEGIN PEND PHILE PIF PIN PLUS PLUSPLUS POR POUT RBRACE REAL RPAREN SEMICOLON STRING TIMESprogram : INIT commands ENDcommands : command\n                | command commandscommand : assignment\n               | conditional\n               | loop\n               | input\n               | output\n               | blockassignment : ID ASSIGN expression\n                  | ID ASSIGN STRINGexpression : term\n                  | term PLUS expression\n                  | term MINUS expression\n                  | LT ID GTterm : factor\n            | factor TIMES term\n            | factor DIVIDE termfactor : NUMBER\n              | REAL\n              | ID\n              | LPAREN expression RPARENconditional : PIF LPAREN condition RPAREN block optional_else\n                   | PIF LPAREN condition RPAREN blockoptional_else : PAF block\n                     | emptycondition : expression relational_op expressionrelational_op : EQUAL\n                     | GE\n                     | LE\n                     | GT\n                     | LT\n                     | NEloop : PHILE LPAREN condition RPAREN blockincrement : ID PLUSPLUS\n                 | ID MINUSMINUSblock : LBRACE commands RBRACE\n             | LBRACE commands PEND\n             | PEGIN commands RBRACE\n             | PEGIN commands PENDinput : PIN IDoutput : POUT expression\n              | POUT STRINGempty :'
    
_lr_action_items = {'INIT':([0,],[2,]),'$end':([1,18,],[0,-1,]),'ID':([2,4,5,6,7,8,9,10,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,40,41,43,44,46,47,48,49,51,52,53,54,55,56,57,59,60,61,62,63,64,65,67,68,70,71,],[11,11,-4,-5,-6,-7,-8,-9,23,28,11,11,28,28,28,-41,-42,-43,-12,42,-21,-16,-19,-20,28,-10,-11,28,28,28,28,-37,-38,-39,-40,28,-28,-29,-30,-31,-32,-33,-13,-14,-15,-17,-18,-22,-24,-34,-23,-26,-25,]),'PIF':([2,4,5,6,7,8,9,10,16,17,23,24,25,26,28,29,30,31,35,36,46,47,48,49,59,60,61,62,63,64,65,67,68,70,71,],[12,12,-4,-5,-6,-7,-8,-9,12,12,-41,-42,-43,-12,-21,-16,-19,-20,-10,-11,-37,-38,-39,-40,-13,-14,-15,-17,-18,-22,-24,-34,-23,-26,-25,]),'PHILE':([2,4,5,6,7,8,9,10,16,17,23,24,25,26,28,29,30,31,35,36,46,47,48,49,59,60,61,62,63,64,65,67,68,70,71,],[13,13,-4,-5,-6,-7,-8,-9,13,13,-41,-42,-43,-12,-21,-16,-19,-20,-10,-11,-37,-38,-39,-40,-13,-14,-15,-17,-18,-22,-24,-34,-23,-26,-25,]),'PIN':([2,4,5,6,7,8,9,10,16,17,23,24,25,26,28,29,30,31,35,36,46,47,48,49,59,60,61,62,63,64,65,67,68,70,71,],[14,14,-4,-5,-6,-7,-8,-9,14,14,-41,-42,-43,-12,-21,-16,-19,-20,-10,-11,-37,-38,-39,-40,-13,-14,-15,-17,-18,-22,-24,-34,-23,-26,-25,]),'POUT':([2,4,5,6,7,8,9,10,16,17,23,24,25,26,28,29,30,31,35,36,46,47,48,49,59,60,61,62,63,64,65,67,68,70,71,],[15,15,-4,-5,-6,-7,-8,-9,15,15,-41,-42,-43,-12,-21,-16,-19,-20,-10,-11,-37,-38,-39,-40,-13,-14,-15,-17,-18,-22,-24,-34,-23,-26,-25,]),'LBRACE':([2,4,5,6,7,8,9,10,16,17,23,24,25,26,28,29,30,31,35,36,46,47,48,49,50,58,59,60,61,62,63,64,65,67,68,69,70,71,],[16,16,-4,-5,-6,-7,-8,-9,16,16,-41,-42,-43,-12,-21,-16,-19,-20,-10,-11,-37,-38,-39,-40,16,16,-13,-14,-15,-17,-18,-22,-24,-34,-23,16,-26,-25,]),'PEGIN':([2,4,5,6,7,8,9,10,16,17,23,24,25,26,28,29,30,31,35,36,46,47,48,49,50,58,59,60,61,62,63,64,65,67,68,69,70,71,],[17,17,-4,-5,-6,-7,-8,-9,17,17,-41,-42,-43,-12,-21,-16,-19,-20,-10,-11,-37,-38,-39,-40,17,17,-13,-14,-15,-17,-18,-22,-24,-34,-23,17,-26,-25,]),'END':([3,4,5,6,7,8,9,10,19,23,24,25,26,28,29,30,31,35,36,46,47,48,49,59,60,61,62,63,64,65,67,68,70,71,],[18,-2,-4,-5,-6,-7,-8,-9,-3,-41,-42,-43,-12,-21,-16,-19,-20,-10,-11,-37,-38,-39,-40,-13,-14,-15,-17,-18,-22,-24,-34,-23,-26,-25,]),'RBRACE':([4,5,6,7,8,9,10,19,23,24,25,26,28,29,30,31,33,34,35,36,46,47,48,49,59,60,61,62,63,64,65,67,68,70,71,],[-2,-4,-5,-6,-7,-8,-9,-3,-41,-42,-43,-12,-21,-16,-19,-20,46,48,-10,-11,-37,-38,-39,-40,-13,-14,-15,-17,-18,-22,-24,-34,-23,-26,-25,]),'PEND':([4,5,6,7,8,9,10,19,23,24,25,26,28,29,30,31,33,34,35,36,46,47,48,49,59,60,61,62,63,64,65,67,68,70,71,],[-2,-4,-5,-6,-7,-8,-9,-3,-41,-42,-43,-12,-21,-16,-19,-20,47,49,-10,-11,-37,-38,-39,-40,-13,-14,-15,-17,-18,-22,-24,-34,-23,-26,-25,]),'ASSIGN':([11,],[20,]),'LPAREN':([12,13,15,20,21,22,32,40,41,43,44,51,52,53,54,55,56,57,],[21,22,32,32,32,32,32,32,32,32,32,32,-28,-29,-30,-31,-32,-33,]),'STRING':([15,20,],[25,36,]),'LT':([15,20,21,22,26,28,29,30,31,32,38,40,41,51,52,53,54,55,56,57,59,60,61,62,63,64,],[27,27,27,27,-12,-21,-16,-19,-20,27,56,27,27,27,-28,-29,-30,-31,-32,-33,-13,-14,-15,-17,-18,-22,]),'NUMBER':([15,20,21,22,32,40,41,43,44,51,52,53,54,55,56,57,],[30,30,30,30,30,30,30,30,30,30,-28,-29,-30,-31,-32,-33,]),'REAL':([15,20,21,22,32,40,41,43,44,51,52,53,54,55,56,57,],[31,31,31,31,31,31,31,31,31,31,-28,-29,-30,-31,-32,-33,]),'EQUAL':([26,28,29,30,31,38,59,60,61,62,63,64,],[-12,-21,-16,-19,-20,52,-13,-14,-15,-17,-18,-22,]),'GE':([26,28,29,30,31,38,59,60,61,62,63,64,],[-12,-21,-16,-19,-20,53,-13,-14,-15,-17,-18,-22,]),'LE':([26,28,29,30,31,38,59,60,61,62,63,64,],[-12,-21,-16,-19,-20,54,-13,-14,-15,-17,-18,-22,]),'GT':([26,28,29,30,31,38,42,59,60,61,62,63,64,],[-12,-21,-16,-19,-20,55,61,-13,-14,-15,-17,-18,-22,]),'NE':([26,28,29,30,31,38,59,60,61,62,63,64,],[-12,-21,-16,-19,-20,57,-13,-14,-15,-17,-18,-22,]),'RPAREN':([26,28,29,30,31,37,39,45,59,60,61,62,63,64,66,],[-12,-21,-16,-19,-20,50,58,64,-13,-14,-15,-17,-18,-22,-27,]),'PLUS':([26,28,29,30,31,62,63,64,],[40,-21,-16,-19,-20,-17,-18,-22,]),'MINUS':([26,28,29,30,31,62,63,64,],[41,-21,-16,-19,-20,-17,-18,-22,]),'TIMES':([28,29,30,31,64,],[-21,43,-19,-20,-22,]),'DIVIDE':([28,29,30,31,64,],[-21,44,-19,-20,-22,]),'PAF':([46,47,48,49,65,],[-37,-38,-39,-40,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'commands':([2,4,16,17,],[3,19,33,34,]),'command':([2,4,16,17,],[4,4,4,4,]),'assignment':([2,4,16,17,],[5,5,5,5,]),'conditional':([2,4,16,17,],[6,6,6,6,]),'loop':([2,4,16,17,],[7,7,7,7,]),'input':([2,4,16,17,],[8,8,8,8,]),'output':([2,4,16,17,],[9,9,9,9,]),'block':([2,4,16,17,50,58,69,],[10,10,10,10,65,67,71,]),'expression':([15,20,21,22,32,40,41,51,],[24,35,38,38,45,59,60,66,]),'term':([15,20,21,22,32,40,41,43,44,51,],[26,26,26,26,26,26,26,62,63,26,]),'factor':([15,20,21,22,32,40,41,43,44,51,],[29,29,29,29,29,29,29,29,29,29,]),'condition':([21,22,],[37,39,]),'relational_op':([38,],[51,]),'optional_else':([65,],[68,]),'empty':([65,],[70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INIT commands END','program',3,'p_program','myparser.py',10),
  ('commands -> command','commands',1,'p_commands','myparser.py',17),
  ('commands -> command commands','commands',2,'p_commands','myparser.py',18),
  ('command -> assignment','command',1,'p_command','myparser.py',25),
  ('command -> conditional','command',1,'p_command','myparser.py',26),
  ('command -> loop','command',1,'p_command','myparser.py',27),
  ('command -> input','command',1,'p_command','myparser.py',28),
  ('command -> output','command',1,'p_command','myparser.py',29),
  ('command -> block','command',1,'p_command','myparser.py',30),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','myparser.py',34),
  ('assignment -> ID ASSIGN STRING','assignment',3,'p_assignment','myparser.py',35),
  ('expression -> term','expression',1,'p_expression','myparser.py',39),
  ('expression -> term PLUS expression','expression',3,'p_expression','myparser.py',40),
  ('expression -> term MINUS expression','expression',3,'p_expression','myparser.py',41),
  ('expression -> LT ID GT','expression',3,'p_expression','myparser.py',42),
  ('term -> factor','term',1,'p_term','myparser.py',51),
  ('term -> factor TIMES term','term',3,'p_term','myparser.py',52),
  ('term -> factor DIVIDE term','term',3,'p_term','myparser.py',53),
  ('factor -> NUMBER','factor',1,'p_factor','myparser.py',60),
  ('factor -> REAL','factor',1,'p_factor','myparser.py',61),
  ('factor -> ID','factor',1,'p_factor','myparser.py',62),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','myparser.py',63),
  ('conditional -> PIF LPAREN condition RPAREN block optional_else','conditional',6,'p_conditional','myparser.py',70),
  ('conditional -> PIF LPAREN condition RPAREN block','conditional',5,'p_conditional','myparser.py',71),
  ('optional_else -> PAF block','optional_else',2,'p_optional_else','myparser.py',77),
  ('optional_else -> empty','optional_else',1,'p_optional_else','myparser.py',78),
  ('condition -> expression relational_op expression','condition',3,'p_condition','myparser.py',85),
  ('relational_op -> EQUAL','relational_op',1,'p_relational_op','myparser.py',89),
  ('relational_op -> GE','relational_op',1,'p_relational_op','myparser.py',90),
  ('relational_op -> LE','relational_op',1,'p_relational_op','myparser.py',91),
  ('relational_op -> GT','relational_op',1,'p_relational_op','myparser.py',92),
  ('relational_op -> LT','relational_op',1,'p_relational_op','myparser.py',93),
  ('relational_op -> NE','relational_op',1,'p_relational_op','myparser.py',94),
  ('loop -> PHILE LPAREN condition RPAREN block','loop',5,'p_loop','myparser.py',98),
  ('increment -> ID PLUSPLUS','increment',2,'p_increment','myparser.py',102),
  ('increment -> ID MINUSMINUS','increment',2,'p_increment','myparser.py',103),
  ('block -> LBRACE commands RBRACE','block',3,'p_block','myparser.py',107),
  ('block -> LBRACE commands PEND','block',3,'p_block','myparser.py',108),
  ('block -> PEGIN commands RBRACE','block',3,'p_block','myparser.py',109),
  ('block -> PEGIN commands PEND','block',3,'p_block','myparser.py',110),
  ('input -> PIN ID','input',2,'p_input','myparser.py',114),
  ('output -> POUT expression','output',2,'p_output','myparser.py',118),
  ('output -> POUT STRING','output',2,'p_output','myparser.py',119),
  ('empty -> <empty>','empty',0,'p_empty','myparser.py',123),
]
